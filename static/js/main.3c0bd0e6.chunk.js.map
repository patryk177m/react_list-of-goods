{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPHABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","isApplied","hide","count","handleSortByAlphabet","setState","handleSortByLength","handleResetClick","handleReverseClick","this","className","type","cn","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGRC,EAAY,YAAOH,GAkBvB,OAhBIC,IAAaJ,EAASO,SACxBD,EAAe,YAAIA,GAChBE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACrCN,IAAaJ,EAASY,SAC/BN,EAAe,YAAIA,GAChBE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,WAG7CR,IACFC,EAAe,YAAIA,GAAcQ,WAKnCC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAnCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA+CE,IAAMiB,EAAb,4MACEC,MAAyB,CACvBb,YAAY,EACZD,SAAUJ,EAASmB,KACnBC,UAAW,EAAC,GAAO,GACnBC,MAAM,EACNC,MAAO,GANX,EASEC,qBAAuB,WACrB,EAAKC,SAAS,CACZpB,SAAUJ,EAASO,SACnBa,UAAW,EAAC,GAAM,GAClBC,MAAM,KAbZ,EAiBEI,mBAAqB,WACnB,EAAKD,SAAS,CACZpB,SAAUJ,EAASY,OACnBQ,UAAW,EAAC,GAAO,GACnBC,MAAM,KArBZ,EAyBEK,iBAAmB,WACjB,EAAKF,SAAS,CACZpB,SAAUJ,EAASmB,KACnBC,UAAW,EAAC,GAAO,GACnBf,YAAY,EACZgB,MAAM,KA9BZ,EAkCEM,mBAAqB,WACnB,EAAKH,UAAS,SAAAN,GACZ,MAAO,CACLb,YAAaa,EAAMb,WACnBiB,MAAOJ,EAAMI,MAAQ,EACrBD,KAAMH,EAAMI,MAAQ,IAAM,OAvClC,4CA4CE,WACE,MAKIM,KAAKV,MAJPd,EADF,EACEA,SACAC,EAFF,EAEEA,WACAe,EAHF,EAGEA,UACAC,EAJF,EAIEA,KAGF,OACE,sBAAKQ,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,SAAU,UAAW,CACjC,YAAaX,EAAU,KAEzBY,QAASJ,KAAKL,qBALhB,iCAUA,wBACEO,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAaX,EAAU,KAEzBY,QAASJ,KAAKH,mBALhB,4BAUA,wBACEK,KAAK,SACLD,UAAWE,IAAG,SAAU,aAAc,CACpC,YAAa1B,IAEf2B,QAASJ,KAAKD,mBALhB,qBASCN,EAEG,wBACES,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKF,iBAHhB,mBAOE,QAGR,6BACE,6BACG,YAAIxB,EAAkBD,EAAiB,CAAEG,WAAUC,gBACjD4B,KAAI,SAACC,GAAD,OACH,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBApGzB,GAAyBC,IAAMC,WC9D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3c0bd0e6.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  let visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPHABET) {\n    visibleGoods = [...visibleGoods]\n      .sort((good1, good2) => good1.localeCompare(good2));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods = [...visibleGoods]\n      .sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods = [...visibleGoods].reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n  isApplied: boolean[],\n  hide: boolean,\n  count: number,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n    isApplied: [false, false],\n    hide: false,\n    count: 0,\n  };\n\n  handleSortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n      isApplied: [true, false],\n      hide: true,\n    });\n  };\n\n  handleSortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n      isApplied: [false, true],\n      hide: true,\n    });\n  };\n\n  handleResetClick = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isApplied: [false, false],\n      isReversed: false,\n      hide: false,\n    });\n  };\n\n  handleReverseClick = () => {\n    this.setState(state => {\n      return {\n        isReversed: !state.isReversed,\n        count: state.count + 1,\n        hide: state.count % 2 === 0,\n      };\n    });\n  };\n\n  render() {\n    const {\n      sortType,\n      isReversed,\n      isApplied,\n      hide,\n    } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn('button', 'is-info', {\n              'is-light': !isApplied[0],\n            })}\n            onClick={this.handleSortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button', 'is-success', {\n              'is-light': !isApplied[1],\n            })}\n            onClick={this.handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn('button', 'is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.handleReverseClick}\n          >\n            Reverse\n          </button>\n          {hide\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.handleResetClick}\n              >\n                Reset\n              </button>\n            ) : null}\n        </div>\n\n        <ul>\n          <ul>\n            {[...getReorderedGoods(goodsFromServer, { sortType, isReversed })]\n              .map((good) => (\n                <li key={good} data-cy=\"Good\">{good}</li>))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}